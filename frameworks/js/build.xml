<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->

<!-- Note:
    If you modify this file you may have to make the same change in build_framework.xml.
    build_framework.xml is renamed to build.xml when it is packaged.
    It is used to build the frameworks directory from the zip file. 
-->
<project name="frameworksJS" default="main" basedir=".">

    <property name="ROYALE_HOME" location="../../.."/>

    <!-- Required for OSX 10.6 / Snow Leopard Performance. -->
    <!-- Java 7 on Mac requires OSX 10.7.3 or higher and is 64-bit only -->
    <!-- local.d32 is set/used in build.properties so this needs to be done first. -->
    <condition property="local.d32" value="-d32">
        <and>
            <os family="mac"/>
            <matches pattern="1.6.*" string="${java.version}"/>
            <equals arg1="${sun.arch.data.model}" arg2="64"/>
            <equals arg1="${os.arch}" arg2="x86_64"/>
        </and>
    </condition>

    <!-- Property for the platform.  -->
    <condition property="isMac">
        <os family="mac"/>
    </condition>
    <condition property="isWindows">
        <os family="windows" />
    </condition>   
    <condition property="isLinux">
        <and>
          <os family="unix"/>    
          <not>
            <os family="mac"/>    
          </not>
        </and>
    </condition>  

    <property file="${ROYALE_HOME}/env.properties"/>
    <property environment="env"/>
    <property file="${ROYALE_HOME}/build.properties"/>
    <property name="ROYALE_HOME" value="${ROYALE_HOME}" />
 
    <target name="main" depends="check-compile-env,clean,prepare,compile"
        description="Clean build of all SWCs"/>

    <target name="check-compile-env" description="Check for the required environment variables">
        <ant antfile="${ROYALE_HOME}/build.xml" target="check-compile-env" dir="${ROYALE_HOME}"/>
    </target>

    
    <target name="prepare" depends="thirdparty-downloads"/>
            
    <target name="thirdparty-downloads" unless="no.thirdparty-downloads" description="Downloads all the required thirdparty code.">
    </target>
    
    <target name="compile" description="Builds all SWCs but not their resource bundles">
        <!-- order may matter due to dependencies -->
        <antcall target="Language"/>
        <antcall target="Core"/>
        <antcall target="Collections"/>
        <antcall target="Network"/>
        <antcall target="Reflection"/>
        <antcall target="Storage"/>
		<antcall target="Simple"/>
    </target>
    
    <target name="other.locales" description ="Builds resource SWCs for all locales">
        <!--<ant dir="${basedir}/projects/RoyaleUI" target="other.locales"/>-->
    </target>
    
    <target name="doc" >
        <ant dir="${basedir}/projects/Core" target="doc" />
    </target>
   
    <!--
		Cleanup
	-->

    <target name="super-clean" depends="thirdparty-clean,clean" description="Cleans everything including thirdparty downloads."/>
	
    <target name="thirdparty-clean" unless="no.thirdparty-clean" description="Removes all thirdparty downloads.">
        <ant antfile="${basedir}/downloads.xml" target="clean" dir="${basedir}"/>
    </target>
    
    <target name="clean" description="Cleans all SWCs and their resource bundles">
        <!-- Delete output from SWC projects -->
        <ant dir="${basedir}/projects/CollectionsJS" target="clean"/>
        <ant dir="${basedir}/projects/CoreJS" target="clean"/>
        <ant dir="${basedir}/projects/LanguageJS" target="clean"/>
        <ant dir="${basedir}/projects/NetworkJS" target="clean"/>
        <ant dir="${basedir}/projects/ReflectionJS" target="clean"/>
        <ant dir="${basedir}/projects/StorageJS" target="clean"/>
        <ant dir="${basedir}/projects/SimpleJS" target="clean"/>

        <delete dir="${basedir}/libs"/>
        <delete dir="${basedir}/generated-sources"/>
    </target>

    <target name="Core" description="Clean build of CoreJS.swc">
        <ant dir="${basedir}/projects/CoreJS"/>
    </target>

    <target name="Collections" description="Clean build of CollectionsJS.swc">
        <ant dir="${basedir}/projects/CollectionsJS"/>
    </target>

    <target name="Language" description="Clean build of LanguageJS.swc">
        <ant dir="${basedir}/projects/LanguageJS"/>
    </target>

    <target name="Network" description="Clean build of NetworkJS.swc">
        <ant dir="${basedir}/projects/NetworkJS"/>
    </target>

    <target name="Reflection" description="Clean build of ReflectionJS.swc">
        <ant dir="${basedir}/projects/ReflectionJS"/>
    </target>

    <target name="Storage" description="Clean build of StorageJS.swc">
        <ant dir="${basedir}/projects/StorageJS"/>
    </target>
    
    <target name="TLF" description="Clean build of SimpleJS.swc">
        <ant dir="${basedir}/projects/SimpleJS"/>
    </target>

</project>
